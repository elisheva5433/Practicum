{"ast":null,"code":"var _jsxFileName = \"C:\\\\PRACTICUM\\\\PracticLearningProject\\\\client\\\\src\\\\components\\\\Prompt.js\",\n  _s = $RefreshSig$();\nimport OpenAI from \"openai\";\nimport { useState } from \"react\";\n\n// const client = new OpenAI({\n//   apiKey: process.env.REACT_APP_OPENAI_API_KEY\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function sendPromptToOpenAI(prompt, topic, subtopic) {\n  const response = await client.chat.completions.create({\n    model: \"gpt-4o-mini\",\n    messages: [{\n      role: \"user\",\n      content: `${prompt} in topic ${topic} in sub topic ${subtopic}`\n    }]\n  });\n  return response.choices[0].message.content;\n}\nfunction Prompt(topic, subtopic) {\n  _s();\n  const handleSend = prompt => {\n    const response = sendPromptToOpenAI(prompt, topic, subtopic);\n  };\n  const [prompt, setPrompt] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"write what you want to know:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your prompt here...\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onSubmit: handleSend,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Prompt, \"aktPPfsqt7fI0SQCfTqjxGF+A+w=\");\n_c = Prompt;\nexport default Prompt;\nvar _c;\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"names":["OpenAI","useState","jsxDEV","_jsxDEV","sendPromptToOpenAI","prompt","topic","subtopic","response","client","chat","completions","create","model","messages","role","content","choices","message","Prompt","_s","handleSend","setPrompt","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onSubmit","_c","$RefreshReg$"],"sources":["C:/PRACTICUM/PracticLearningProject/client/src/components/Prompt.js"],"sourcesContent":["import OpenAI from \"openai\";\r\nimport { useState } from \"react\";\r\n\r\n// const client = new OpenAI({\r\n//   apiKey: process.env.REACT_APP_OPENAI_API_KEY\r\n// });\r\n\r\n\r\nexport async function sendPromptToOpenAI(prompt, topic, subtopic) {\r\n    const response = await client.chat.completions.create({\r\n        model: \"gpt-4o-mini\",\r\n        messages: [{ role: \"user\", content: `${prompt} in topic ${topic} in sub topic ${subtopic}` }]\r\n    });\r\n    return response.choices[0].message.content;\r\n\r\n}\r\n\r\n\r\n\r\nfunction Prompt(topic, subtopic) {\r\n\r\n    const handleSend = (prompt) => {\r\n        const response=sendPromptToOpenAI(prompt, topic, subtopic)\r\n    }\r\n\r\n    const [prompt, setPrompt] = useState(\"\");\r\n    return (\r\n        <div>\r\n            <h2>write what you want to know:</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Type your prompt here...\"\r\n                value={prompt}\r\n                onChange={(e) => setPrompt(e.target.value)} />\r\n            <button onSubmit={handleSend}>Submit</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Prompt;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,OAAO,eAAeC,kBAAkBA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EAC9D,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;IAClDC,KAAK,EAAE,aAAa;IACpBC,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE,GAAGX,MAAM,aAAaC,KAAK,iBAAiBC,QAAQ;IAAG,CAAC;EAChG,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACS,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACF,OAAO;AAE9C;AAIA,SAASG,MAAMA,CAACb,KAAK,EAAEC,QAAQ,EAAE;EAAAa,EAAA;EAE7B,MAAMC,UAAU,GAAIhB,MAAM,IAAK;IAC3B,MAAMG,QAAQ,GAACJ,kBAAkB,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,CAAC;EAC9D,CAAC;EAED,MAAM,CAACF,MAAM,EAAEiB,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,oBACIE,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCxB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,0BAA0B;MACtCC,KAAK,EAAEzB,MAAO;MACd0B,QAAQ,EAAGC,CAAC,IAAKV,SAAS,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDxB,OAAA;MAAQ+B,QAAQ,EAAEb,UAAW;MAAAE,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd;AAACP,EAAA,CAlBQD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAmBf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}