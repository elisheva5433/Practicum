{"ast":null,"code":"var _jsxFileName = \"C:\\\\PRACTICUM\\\\PracticLearningProject\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { use, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Welcome from './Welcome';\nimport ChooseTopic from './ChooseTopic';\nimport LearningHistory from './LearningHistory';\nimport UserManagement from \"./UserManagement\";\nimport Nuv from './Nuv';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [exsist, setExsist] = useState(false);\n  const [userphone, setUserPhone] = useState(\"\");\n  const [needToLogin, setNeedToLogin] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [errorMessagePhone, setErrorMessagePhone] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [admin, setAdmin] = useState(false);\n\n  // useEffect(() => {\n  //     if (userId) {\n  //         console.log(\"userId was updated: \", userId);\n  //     }\n  // }, [userId]);\n\n  const logUp = async () => {\n    //בדיקת תקינות קלט\n    if (!username || username.trim().length < 1) {\n      setErrorMessage(\"Username must contain at least 1 character\");\n      return;\n    }\n    const phoneRegex = /^\\+?[0-9]{7,15}$/;\n    if (!phoneRegex.test(userphone)) {\n      setErrorMessagePhone(\"Please enter a valid phone number\");\n      return;\n    }\n    const user = {\n      name: username,\n      phone: userphone\n    };\n    console.log(user);\n\n    //יצירת אובייקט של משתמש במסד הנתונים\n    try {\n      const response = await fetch(`http://localhost:5084/api/User/CreateUser`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      if (response.ok) {\n        const createdUser = await response.json();\n        // console.log(\"user created\", createdUser);\n        setUserId(createdUser.id);\n        // console.log(\"userId set to: \", createdUser.id);\n        setLoggedIn(true);\n      } else {\n        console.log(\"error creating user\");\n      }\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n    }\n    alert;\n  };\n\n  //פונקציה לבדיקת קיום שם משתמש\n  const checkIfExsist = async () => {\n    //בדיקת קלט תקין\n    if (!username || username.trim().length < 1) {\n      setErrorMessage(\"Username must contain at least 1 character\");\n      return;\n    }\n    const phoneRegex = /^\\+?[0-9]{7,15}$/; // תומך במספרים עם או בלי '+' ואורך סביר\n    if (!phoneRegex.test(userphone)) {\n      setErrorMessagePhone(\"Please enter a valid phone number\");\n      return;\n    }\n    //בדיקה האם אדמין\n    if (userphone === \"0527105433\") {\n      setAdmin(true);\n    }\n    //נגשים לשרת לבדיקת קיום שם המשתמש\n    try {\n      const response = await fetch(`http://localhost:5084/api/User/byName/${username}`);\n      if (response.status === 404) {\n        // setNeedToLogin(true);\n        setExsist(false);\n        setErrorMessage(\"user name is not exsist\");\n        console.log(\"kkk \", errorMessage);\n        return;\n      }\n      if (!response.ok) {\n        console.error(\"server error\", response.status);\n        setErrorMessage(\"connection error, try again later\");\n        return;\n      }\n      try {\n        const response = await fetch(`http://localhost:5084/api/User/byPhone/${userphone}`);\n        if (response.status === 404) {\n          setErrorMessagePhone(\"phone is not correct\");\n          console.log(\"phone is not correct\");\n          return;\n        }\n        if (!response.ok) {\n          setErrorMessage(\"שגיאת שרת, נסה שוב מאוחר יותר\");\n          console.error(\"server error\", response.status);\n          return;\n        }\n        setErrorMessage(\"\");\n        const data = await response.json();\n        console.log(\"found user\", data);\n        setLoggedIn(true);\n        setUserId(data.id);\n      } catch (error) {\n        console.error(\"שגיאה ברשת:\", error);\n      }\n\n      // setExsist(true);\n      setErrorMessage(\"\");\n      // const data = await response.json();\n      // console.log(\"user found:\", data);\n    } catch (error) {\n      console.error(\"error:\", error);\n      setErrorMessage(\"connection error, try again\");\n    }\n  };\n\n  //בדיקה האם הטלפון שהוכנס תואם לנתונים\n  // const checkIfCorrectPhone = async () => {\n  //     //בדיקת תקינות\n\n  //     //נגשים לשרת לבדוק אם קיים נתון כזה במסד הנתונים\n\n  // };\n\n  //עדכון בכל רינדור\n  useEffect(() => {\n    if (userId) {\n      console.log(\"userId was updated:\", userId);\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"insert your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userphone,\n        onChange: e => setUserPhone(e.target.value),\n        placeholder: \"insert your phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMessagePhone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkIfExsist,\n        children: \"ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logUp,\n        children: \"log up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 27\n    }, this) :\n    /*#__PURE__*/\n    //לאחר תהליך הרישום או הכניסה יוצגו רכיבי המערכת\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ChooseTopic, {\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(LearningHistory, {\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }, this), admin && /*#__PURE__*/_jsxDEV(UserManagement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(Login, \"ABHaOwRvNIc95tf4Qv8M5miMKeY=\");\n_c = Login;\nexport default Login;\n\n// import { use, useState } from \"react\";\n// import { useEffect } from \"react\";\n// import Welcome from './Welcome';\n// import ChooseTopic from './ChooseTopic';\n// import LearningHistory from './LearningHistory';\n// import UserManagement from \"./UserManagement\";\n// import Nuv from './Nuv';\n\n// function Login() {\n\n//     const [username, setUsername] = useState(\"\");\n//     const [exsist, setExsist] = useState(false);\n//     const [userphone, setUserPhone] = useState(\"\");\n//     const [needToLogin, setNeedToLogin] = useState(false);\n//     const [loggedIn, setLoggedIn] = useState(false);\n//     const [errorMessage, setErrorMessage] = useState(\"\");\n//     const [errorMessagePhone, setErrorMessagePhone] = useState(\"\");\n//     const [userId, setUserId] = useState(\"\");\n//     const [admin, setAdmin] = useState(false);\n\n//     // useEffect(() => {\n//     //     if (userId) {\n//     //         console.log(\"userId was updated: \", userId);\n//     //     }\n//     // }, [userId]);\n\n//     const logUp = async () => {\n//         //בדיקת תקינות קלט\n//         if (!username || username.trim().length < 1) {\n//             setErrorMessage(\"Username must contain at least 1 character\");\n//             return;\n\n//         }\n\n//         const phoneRegex = /^\\+?[0-9]{7,15}$/; \n//         if (!phoneRegex.test(userphone)) {\n//             setErrorMessagePhone(\"Please enter a valid phone number\");\n//             return;\n//         }\n\n//         const user = {\n//             name: username,\n//             phone: userphone\n//         };\n//         console.log(user);\n\n//         //יצירת אובייקט של משתמש במסד הנתונים\n//         try {\n//             const response = await fetch(`http://localhost:5084/api/User/CreateUser`, {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 body: JSON.stringify(user)\n//             });\n\n//             if (response.ok) {\n//                 const createdUser = await response.json(); \n//                 // console.log(\"user created\", createdUser);\n//                 setUserId(createdUser.id);\n//                 // console.log(\"userId set to: \", createdUser.id);\n//                 setLoggedIn(true);\n//             } else {\n//                 console.log(\"error creating user\");\n//             }\n//         } catch (err) {\n//             console.error(\"Fetch error:\", err);\n//         }\n//     }\n\n//     //פונקציה לבדיקת קיום שם משתמש\n//     const checkIfExsist = async () => {\n//         //בדיקת קלט תקין\n//         if (!username || username.trim().length < 1) {\n//             setErrorMessage(\"Username must contain at least 1 character\");\n//             return;\n//         }\n\n//         //נגשים לשרת לבדיקת קיום שם המשתמש\n//         try {\n//             const response = await fetch(`http://localhost:5084/api/User/byName/${username}`);\n\n//             if (response.status === 404) {\n//                 // setNeedToLogin(true);\n//                 setExsist(false);\n//                 setErrorMessage(\"user name is not exsist\");\n//                 console.log(\"kkk \", errorMessage);\n//                 return;\n//             }\n\n//             if (!response.ok) {\n//                 console.error(\"server error\", response.status);\n//                 setErrorMessage(\"connection error, try again later\");\n//                 return;\n//             }\n\n//             setExsist(true);\n//             setErrorMessage(\"\"); \n//             const data = await response.json();\n//             console.log(\"user found:\", data);\n\n//         } catch (error) {\n//             console.error(\"error:\", error);\n//             setErrorMessage(\"connection error, try again\");\n//         }\n//     };\n\n//     //בדיקה האם הטלפון שהוכנס תואם לנתונים\n//     const checkIfCorrectPhone = async () => {\n//         //בדיקת תקינות\n//         const phoneRegex = /^\\+?[0-9]{7,15}$/; // תומך במספרים עם או בלי '+' ואורך סביר\n//         if (!phoneRegex.test(userphone)) {\n//             setErrorMessagePhone(\"Please enter a valid phone number\");\n//             return;\n//         }\n//         //בדיקה האם אדמין\n//         if(userphone===\"0527105433\"){\n//             setAdmin(true);\n//         }\n//         //נגשים לשרת לבדוק אם קיים נתון כזה במסד הנתונים\n//         try {\n//             const response = await fetch(`http://localhost:5084/api/User/byPhone/${userphone}`);\n\n//             if (response.status === 404) {\n//                 setErrorMessagePhone(\"phone is not correct\")\n//                 console.log(\"phone is not correct\");\n//                 return;\n//             }\n\n//             if (!response.ok) {\n//                 setErrorMessage(\"שגיאת שרת, נסה שוב מאוחר יותר\");\n//                 console.error(\"server error\", response.status);\n//                 return;\n//             }\n//             setErrorMessage(\"\"); \n//             const data = await response.json();\n//             console.log(\"found user\", data);\n//             setLoggedIn(true);\n//             setUserId(data.id);\n\n//         } catch (error) {\n//             console.error(\"שגיאה ברשת:\", error);\n//         }\n//     };\n\n//     //עדכון בכל רינדור\n//     useEffect(() => {\n//         if (userId) {\n//             console.log(\"userId was updated:\", userId);\n//         }\n//     }, [userId]);\n\n//     return (\n//         <>\n//             {!loggedIn ? (!needToLogin ? (<div className=\"Login\">\n//                 <h2>Login Page</h2>\n//                 <input\n//                     type=\"text\"\n//                     value={username}\n//                     onChange={(e) => setUsername(e.target.value)}\n//                     placeholder=\"insert your username\"\n//                 />\n//                 <p style={{ color: \"red\" }}>{errorMessage}</p>\n//                 <button onClick={checkIfExsist}>ok</button>\n//                 <button onClick={() => setNeedToLogin(true)}>log up</button>\n//                 {exsist && <><input\n//                     type=\"text\"\n//                     value={userphone}\n//                     onChange={(e) => setUserPhone(e.target.value)}\n//                     placeholder=\"insert your phone number\"\n//                 />\n//                     <p style={{ color: \"red\" }}>{errorMessagePhone}</p>\n//                     <button onClick={checkIfCorrectPhone}>insert</button></>}\n\n//             </div>) : (\n//                 <>\n//                     <h3>log up</h3>\n//                     <input\n//                         type=\"text\"\n//                         value={username}\n//                         onChange={(e) => setUsername(e.target.value)}\n//                         placeholder=\"insert your username\"\n//                     />\n//                     <input\n//                         type=\"text\"\n//                         value={userphone}\n//                         onChange={(e) => setUserPhone(e.target.value)}\n//                         placeholder=\"insert your phone number\"\n//                     />\n//                     <button onClick={logUp}>log up</button>\n//                 </>\n//             )) : (//לאחר תהליך הרישום או הכניסה יוצגו רכיבי המערכת\n//                 <>\n//                     {/* <Nuv></Nuv> */}\n//                     <Welcome />\n//                     <ChooseTopic userId={userId} />\n//                     <LearningHistory userId={userId} />\n//                     {admin &&\n//                     <UserManagement/>}\n//                 </>\n//             )}\n//         </>\n\n//     );\n// }\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["use","useState","useEffect","Welcome","ChooseTopic","LearningHistory","UserManagement","Nuv","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","exsist","setExsist","userphone","setUserPhone","needToLogin","setNeedToLogin","loggedIn","setLoggedIn","errorMessage","setErrorMessage","errorMessagePhone","setErrorMessagePhone","userId","setUserId","admin","setAdmin","logUp","trim","length","phoneRegex","test","user","name","phone","console","log","response","fetch","method","headers","body","JSON","stringify","ok","createdUser","json","id","err","error","alert","checkIfExsist","status","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/PRACTICUM/PracticLearningProject/client/src/components/Login.js"],"sourcesContent":["import { use, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Welcome from './Welcome';\r\nimport ChooseTopic from './ChooseTopic';\r\nimport LearningHistory from './LearningHistory';\r\nimport UserManagement from \"./UserManagement\";\r\nimport Nuv from './Nuv';\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [exsist, setExsist] = useState(false);\r\n    const [userphone, setUserPhone] = useState(\"\");\r\n    const [needToLogin, setNeedToLogin] = useState(false);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [errorMessagePhone, setErrorMessagePhone] = useState(\"\");\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (userId) {\r\n    //         console.log(\"userId was updated: \", userId);\r\n    //     }\r\n    // }, [userId]);\r\n\r\n    const logUp = async () => {\r\n        //בדיקת תקינות קלט\r\n        if (!username || username.trim().length < 1) {\r\n            setErrorMessage(\"Username must contain at least 1 character\");\r\n            return;\r\n\r\n        }\r\n        \r\n        const phoneRegex = /^\\+?[0-9]{7,15}$/; \r\n        if (!phoneRegex.test(userphone)) {\r\n            setErrorMessagePhone(\"Please enter a valid phone number\");\r\n            return;\r\n        }\r\n\r\n        const user = {\r\n            name: username,\r\n            phone: userphone\r\n        };\r\n        console.log(user);\r\n\r\n        //יצירת אובייקט של משתמש במסד הנתונים\r\n        try {\r\n            const response = await fetch(`http://localhost:5084/api/User/CreateUser`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n\r\n            if (response.ok) {\r\n                const createdUser = await response.json(); \r\n                // console.log(\"user created\", createdUser);\r\n                setUserId(createdUser.id);\r\n                // console.log(\"userId set to: \", createdUser.id);\r\n                setLoggedIn(true);\r\n            } else {\r\n                console.log(\"error creating user\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Fetch error:\", err);\r\n        }\r\n        alert\r\n    }\r\n\r\n\r\n\r\n\r\n    //פונקציה לבדיקת קיום שם משתמש\r\n    const checkIfExsist = async () => {\r\n        //בדיקת קלט תקין\r\n        if (!username || username.trim().length < 1) {\r\n            setErrorMessage(\"Username must contain at least 1 character\");\r\n            return;\r\n        }\r\n\r\n        const phoneRegex = /^\\+?[0-9]{7,15}$/; // תומך במספרים עם או בלי '+' ואורך סביר\r\n        if (!phoneRegex.test(userphone)) {\r\n            setErrorMessagePhone(\"Please enter a valid phone number\");\r\n            return;\r\n        }\r\n        //בדיקה האם אדמין\r\n        if(userphone===\"0527105433\"){\r\n            setAdmin(true);\r\n        }\r\n        //נגשים לשרת לבדיקת קיום שם המשתמש\r\n        try {\r\n            const response = await fetch(`http://localhost:5084/api/User/byName/${username}`);\r\n\r\n            if (response.status === 404) {\r\n                // setNeedToLogin(true);\r\n                setExsist(false);\r\n                setErrorMessage(\"user name is not exsist\");\r\n                console.log(\"kkk \", errorMessage);\r\n                return;\r\n            }\r\n\r\n            if (!response.ok) {\r\n                console.error(\"server error\", response.status);\r\n                setErrorMessage(\"connection error, try again later\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n            const response = await fetch(`http://localhost:5084/api/User/byPhone/${userphone}`);\r\n\r\n            if (response.status === 404) {\r\n                setErrorMessagePhone(\"phone is not correct\")\r\n                console.log(\"phone is not correct\");\r\n                return;\r\n            }\r\n\r\n            if (!response.ok) {\r\n                setErrorMessage(\"שגיאת שרת, נסה שוב מאוחר יותר\");\r\n                console.error(\"server error\", response.status);\r\n                return;\r\n            }\r\n            setErrorMessage(\"\"); \r\n            const data = await response.json();\r\n            console.log(\"found user\", data);\r\n            setLoggedIn(true);\r\n            setUserId(data.id);\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"שגיאה ברשת:\", error);\r\n        }\r\n\r\n            // setExsist(true);\r\n            setErrorMessage(\"\"); \r\n            // const data = await response.json();\r\n            // console.log(\"user found:\", data);\r\n\r\n        } catch (error) {\r\n            console.error(\"error:\", error);\r\n            setErrorMessage(\"connection error, try again\");\r\n        }\r\n    };\r\n\r\n    //בדיקה האם הטלפון שהוכנס תואם לנתונים\r\n    // const checkIfCorrectPhone = async () => {\r\n    //     //בדיקת תקינות\r\n        \r\n    //     //נגשים לשרת לבדוק אם קיים נתון כזה במסד הנתונים\r\n        \r\n    // };\r\n\r\n    //עדכון בכל רינדור\r\n    useEffect(() => {\r\n        if (userId) {\r\n            console.log(\"userId was updated:\", userId);\r\n        }\r\n    }, [userId]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {!loggedIn ? (<div className=\"Login\">\r\n                <h2>Login Page</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"insert your username\"\r\n                />\r\n                <p style={{ color: \"red\" }}>{errorMessage}</p>\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    value={userphone}\r\n                    onChange={(e) => setUserPhone(e.target.value)}\r\n                    placeholder=\"insert your phone number\"\r\n                />\r\n                <p style={{ color: \"red\" }}>{errorMessagePhone}</p>\r\n                <button onClick={checkIfExsist}>ok</button>\r\n                <button onClick={logUp}>log up</button>\r\n                </div>\r\n                ) : (//לאחר תהליך הרישום או הכניסה יוצגו רכיבי המערכת\r\n                    <>\r\n                        {/* <Nuv></Nuv> */}\r\n                        <Welcome />\r\n                        <ChooseTopic userId={userId} />\r\n                        <LearningHistory userId={userId} />\r\n                        {admin &&\r\n                        <UserManagement/>}\r\n                    </>\r\n                \r\n                )}\r\n        </>     \r\n    );\r\n}\r\n   \r\n\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { use, useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import Welcome from './Welcome';\r\n// import ChooseTopic from './ChooseTopic';\r\n// import LearningHistory from './LearningHistory';\r\n// import UserManagement from \"./UserManagement\";\r\n// import Nuv from './Nuv';\r\n\r\n\r\n// function Login() {\r\n\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [exsist, setExsist] = useState(false);\r\n//     const [userphone, setUserPhone] = useState(\"\");\r\n//     const [needToLogin, setNeedToLogin] = useState(false);\r\n//     const [loggedIn, setLoggedIn] = useState(false);\r\n//     const [errorMessage, setErrorMessage] = useState(\"\");\r\n//     const [errorMessagePhone, setErrorMessagePhone] = useState(\"\");\r\n//     const [userId, setUserId] = useState(\"\");\r\n//     const [admin, setAdmin] = useState(false);\r\n\r\n\r\n\r\n//     // useEffect(() => {\r\n//     //     if (userId) {\r\n//     //         console.log(\"userId was updated: \", userId);\r\n//     //     }\r\n//     // }, [userId]);\r\n\r\n//     const logUp = async () => {\r\n//         //בדיקת תקינות קלט\r\n//         if (!username || username.trim().length < 1) {\r\n//             setErrorMessage(\"Username must contain at least 1 character\");\r\n//             return;\r\n\r\n//         }\r\n        \r\n//         const phoneRegex = /^\\+?[0-9]{7,15}$/; \r\n//         if (!phoneRegex.test(userphone)) {\r\n//             setErrorMessagePhone(\"Please enter a valid phone number\");\r\n//             return;\r\n//         }\r\n\r\n//         const user = {\r\n//             name: username,\r\n//             phone: userphone\r\n//         };\r\n//         console.log(user);\r\n\r\n//         //יצירת אובייקט של משתמש במסד הנתונים\r\n//         try {\r\n//             const response = await fetch(`http://localhost:5084/api/User/CreateUser`, {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\"\r\n//                 },\r\n//                 body: JSON.stringify(user)\r\n//             });\r\n\r\n//             if (response.ok) {\r\n//                 const createdUser = await response.json(); \r\n//                 // console.log(\"user created\", createdUser);\r\n//                 setUserId(createdUser.id);\r\n//                 // console.log(\"userId set to: \", createdUser.id);\r\n//                 setLoggedIn(true);\r\n//             } else {\r\n//                 console.log(\"error creating user\");\r\n//             }\r\n//         } catch (err) {\r\n//             console.error(\"Fetch error:\", err);\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n\r\n//     //פונקציה לבדיקת קיום שם משתמש\r\n//     const checkIfExsist = async () => {\r\n//         //בדיקת קלט תקין\r\n//         if (!username || username.trim().length < 1) {\r\n//             setErrorMessage(\"Username must contain at least 1 character\");\r\n//             return;\r\n//         }\r\n\r\n//         //נגשים לשרת לבדיקת קיום שם המשתמש\r\n//         try {\r\n//             const response = await fetch(`http://localhost:5084/api/User/byName/${username}`);\r\n\r\n//             if (response.status === 404) {\r\n//                 // setNeedToLogin(true);\r\n//                 setExsist(false);\r\n//                 setErrorMessage(\"user name is not exsist\");\r\n//                 console.log(\"kkk \", errorMessage);\r\n//                 return;\r\n//             }\r\n\r\n//             if (!response.ok) {\r\n//                 console.error(\"server error\", response.status);\r\n//                 setErrorMessage(\"connection error, try again later\");\r\n//                 return;\r\n//             }\r\n\r\n//             setExsist(true);\r\n//             setErrorMessage(\"\"); \r\n//             const data = await response.json();\r\n//             console.log(\"user found:\", data);\r\n\r\n//         } catch (error) {\r\n//             console.error(\"error:\", error);\r\n//             setErrorMessage(\"connection error, try again\");\r\n//         }\r\n//     };\r\n\r\n//     //בדיקה האם הטלפון שהוכנס תואם לנתונים\r\n//     const checkIfCorrectPhone = async () => {\r\n//         //בדיקת תקינות\r\n//         const phoneRegex = /^\\+?[0-9]{7,15}$/; // תומך במספרים עם או בלי '+' ואורך סביר\r\n//         if (!phoneRegex.test(userphone)) {\r\n//             setErrorMessagePhone(\"Please enter a valid phone number\");\r\n//             return;\r\n//         }\r\n//         //בדיקה האם אדמין\r\n//         if(userphone===\"0527105433\"){\r\n//             setAdmin(true);\r\n//         }\r\n//         //נגשים לשרת לבדוק אם קיים נתון כזה במסד הנתונים\r\n//         try {\r\n//             const response = await fetch(`http://localhost:5084/api/User/byPhone/${userphone}`);\r\n\r\n//             if (response.status === 404) {\r\n//                 setErrorMessagePhone(\"phone is not correct\")\r\n//                 console.log(\"phone is not correct\");\r\n//                 return;\r\n//             }\r\n\r\n//             if (!response.ok) {\r\n//                 setErrorMessage(\"שגיאת שרת, נסה שוב מאוחר יותר\");\r\n//                 console.error(\"server error\", response.status);\r\n//                 return;\r\n//             }\r\n//             setErrorMessage(\"\"); \r\n//             const data = await response.json();\r\n//             console.log(\"found user\", data);\r\n//             setLoggedIn(true);\r\n//             setUserId(data.id);\r\n\r\n\r\n//         } catch (error) {\r\n//             console.error(\"שגיאה ברשת:\", error);\r\n//         }\r\n//     };\r\n\r\n//     //עדכון בכל רינדור\r\n//     useEffect(() => {\r\n//         if (userId) {\r\n//             console.log(\"userId was updated:\", userId);\r\n//         }\r\n//     }, [userId]);\r\n\r\n\r\n//     return (\r\n//         <>\r\n//             {!loggedIn ? (!needToLogin ? (<div className=\"Login\">\r\n//                 <h2>Login Page</h2>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={username}\r\n//                     onChange={(e) => setUsername(e.target.value)}\r\n//                     placeholder=\"insert your username\"\r\n//                 />\r\n//                 <p style={{ color: \"red\" }}>{errorMessage}</p>\r\n//                 <button onClick={checkIfExsist}>ok</button>\r\n//                 <button onClick={() => setNeedToLogin(true)}>log up</button>\r\n//                 {exsist && <><input\r\n//                     type=\"text\"\r\n//                     value={userphone}\r\n//                     onChange={(e) => setUserPhone(e.target.value)}\r\n//                     placeholder=\"insert your phone number\"\r\n//                 />\r\n//                     <p style={{ color: \"red\" }}>{errorMessagePhone}</p>\r\n//                     <button onClick={checkIfCorrectPhone}>insert</button></>}\r\n\r\n//             </div>) : (\r\n//                 <>\r\n//                     <h3>log up</h3>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         value={username}\r\n//                         onChange={(e) => setUsername(e.target.value)}\r\n//                         placeholder=\"insert your username\"\r\n//                     />\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         value={userphone}\r\n//                         onChange={(e) => setUserPhone(e.target.value)}\r\n//                         placeholder=\"insert your phone number\"\r\n//                     />\r\n//                     <button onClick={logUp}>log up</button>\r\n//                 </>\r\n//             )) : (//לאחר תהליך הרישום או הכניסה יוצגו רכיבי המערכת\r\n//                 <>\r\n//                     {/* <Nuv></Nuv> */}\r\n//                     <Welcome />\r\n//                     <ChooseTopic userId={userId} />\r\n//                     <LearningHistory userId={userId} />\r\n//                     {admin &&\r\n//                     <UserManagement/>}\r\n//                 </>\r\n//             )}\r\n//         </>\r\n\r\n//     );\r\n// }\r\n\r\n\r\n\r\n// export default Login;"],"mappings":"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AgD,QAAA,gBAEIlD,OAAA,CAACN,OAAO;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXvD,OAAA,CAACL,WAAW;QAACwB,MAAM,EAAEA;MAAO;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BvD,OAAA,CAACJ,eAAe;QAACuB,MAAM,EAAEA;MAAO;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAClClC,KAAK,iBACNrB,OAAA,CAACH,cAAc;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eACnB;EAEL,gBACP,CAAC;AAEX;AAACnD,EAAA,CA9LQD,KAAK;AAAA8D,EAAA,GAAL9D,KAAK;AAkMd,eAAeA,KAAK;;AAyBpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}