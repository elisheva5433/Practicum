{"ast":null,"code":"var _jsxFileName = \"C:\\\\PRACTICUM\\\\PracticLearningProject\\\\client\\\\src\\\\components\\\\Prompt.js\",\n  _s = $RefreshSig$();\nimport OpenAI from \"openai\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Prompt({\n  category,\n  subCategory,\n  UserId\n}) {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  async function sendPrompt(prompt) {\n    var response = await sendPromptToOpenAI(prompt);\n    const promptData = {\n      \"UserId\": UserId,\n      \"CategoryId\": category,\n      \"SubcategoryId\": subCategory,\n      \"PromptText\": prompt,\n      \"Response\": re,\n      \"CreatedAt\": new Date().toISOString()\n    };\n    try {\n      console.log(\"Sending prompt data:\", promptData);\n      try {\n        const response = await axios.post(\"http://localhost:5084/api/Prompts/CreatePrompt\", promptData);\n        console.log(\"AI response:\", response.data);\n      } catch (error) {\n        console.error(\"Error posting prompt data:\", error);\n        return;\n      }\n    } catch (err) {\n      console.error(\"Error:\", err);\n    }\n  }\n  const sendPromptToOpenAI = async prompt => {\n    try {\n      const response = await axios.post(`http://localhost:5084/api/OpenAI/GenerateText`, {\n        \"userId\": \"string\",\n        \"categoryId\": 0,\n        \"subcategoryId\": 0,\n        \"promptText\": \"string\",\n        \"response\": \"string\",\n        \"createdAt\": \"2025-09-19T10:38:31.057Z\"\n      });\n      console.log(\"AI response:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error sending prompt to OpenAI:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"write what you want to know:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your prompt here...\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendPrompt(prompt),\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Prompt, \"aktPPfsqt7fI0SQCfTqjxGF+A+w=\");\n_c = Prompt;\nexport default Prompt;\nvar _c;\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"names":["OpenAI","useState","axios","jsxDEV","_jsxDEV","Prompt","category","subCategory","UserId","_s","prompt","setPrompt","sendPrompt","response","sendPromptToOpenAI","promptData","re","Date","toISOString","console","log","post","data","error","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/PRACTICUM/PracticLearningProject/client/src/components/Prompt.js"],"sourcesContent":["import OpenAI from \"openai\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction Prompt({ category, subCategory, UserId }) {\r\n\r\n    const [prompt, setPrompt] = useState(\"\");\r\n\r\n    async function sendPrompt(prompt) {\r\n        var response = await sendPromptToOpenAI(prompt);\r\n\r\n        const promptData = {\r\n            \"UserId\": UserId,\r\n            \"CategoryId\": category,\r\n            \"SubcategoryId\": subCategory,\r\n            \"PromptText\": prompt,\r\n            \"Response\": re,\r\n            \"CreatedAt\": new Date().toISOString()\r\n        }\r\n\r\n        try {\r\n            console.log(\"Sending prompt data:\", promptData);\r\n            try {\r\n\r\n\r\n                const response = await axios.post(\"http://localhost:5084/api/Prompts/CreatePrompt\", promptData);\r\n                console.log(\"AI response:\", response.data);\r\n            } catch (error) {\r\n                console.error(\"Error posting prompt data:\", error);\r\n                return;\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error:\", err);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const sendPromptToOpenAI = async (prompt) => {\r\n        try {\r\n            const response = await axios.post(`http://localhost:5084/api/OpenAI/GenerateText`, {\r\n                \"userId\": \"string\",\r\n                \"categoryId\": 0,\r\n                \"subcategoryId\": 0,\r\n                \"promptText\": \"string\",\r\n                \"response\": \"string\",\r\n                \"createdAt\": \"2025-09-19T10:38:31.057Z\"\r\n            });\r\n            console.log(\"AI response:\", response.data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error sending prompt to OpenAI:\", error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>write what you want to know:</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Type your prompt here...\"\r\n                value={prompt}\r\n                onChange={(e) => setPrompt(e.target.value)} />\r\n            <button onClick={() => sendPrompt(prompt)}>send</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Prompt;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}