{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n\n// const LearningHistory = () => {\n//   const [items, setItems] = useState([]);\n//   const [filterCategory, setFilterCategory] = useState(null);\n\n//   // טעינת הנתונים מהשרת\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:5084/api/Prompts\"); // כתובת API לדוגמה\n//         const data = await response.json();\n//         setItems(data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   // סינון הנתונים לפי קטגוריה (דינמי)\n//   const filteredItems = filterCategory\n//     ? items.filter(item => item.categoryId === filterCategory)\n//     : items;\n\n//   return (\n//     <div>\n//       <h2>רשימה דינמית משרת</h2>\n\n//       {/* כפתורים לסינון */}\n//       <button onClick={() => setFilterCategory(1)}>קטגוריה 1</button>\n//       <button onClick={() => setFilterCategory(2)}>קטגוריה 2</button>\n//       <button onClick={() => setFilterCategory(3)}>קטגוריה 3</button>\n//       <button onClick={() => setFilterCategory(4)}>קטגוריה 4</button>\n\n//       <button onClick={() => setFilterCategory(null)}>הצג הכל</button>\n\n//       <ul>\n//         {filteredItems.map(item => (\n//           <li key={item.id}>\n//             {item.promptText} - Category {item.categoryId}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default LearningHistory;","map":{"version":3,"names":[],"sources":["C:/PRACTICUM/PracticLearningProject/client/src/components/LearningHistory.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n\r\n// const LearningHistory = () => {\r\n//   const [items, setItems] = useState([]);\r\n//   const [filterCategory, setFilterCategory] = useState(null);\r\n\r\n//   // טעינת הנתונים מהשרת\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await fetch(\"http://localhost:5084/api/Prompts\"); // כתובת API לדוגמה\r\n//         const data = await response.json();\r\n//         setItems(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   // סינון הנתונים לפי קטגוריה (דינמי)\r\n//   const filteredItems = filterCategory\r\n//     ? items.filter(item => item.categoryId === filterCategory)\r\n//     : items;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>רשימה דינמית משרת</h2>\r\n\r\n//       {/* כפתורים לסינון */}\r\n//       <button onClick={() => setFilterCategory(1)}>קטגוריה 1</button>\r\n//       <button onClick={() => setFilterCategory(2)}>קטגוריה 2</button>\r\n//       <button onClick={() => setFilterCategory(3)}>קטגוריה 3</button>\r\n//       <button onClick={() => setFilterCategory(4)}>קטגוריה 4</button>\r\n      \r\n//       <button onClick={() => setFilterCategory(null)}>הצג הכל</button>\r\n\r\n//       <ul>\r\n//         {filteredItems.map(item => (\r\n//           <li key={item.id}>\r\n//             {item.promptText} - Category {item.categoryId}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LearningHistory;\r\n\r\n\r\n"],"mappings":";;AAiBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}